--[[
    Ultimate Tween Tool (Fixed Persistence Version)
    Features:
    - Persistent GUI state through deaths/respawns
    - Zero-overlap player list
    - Unique keybinds enforced
    - Noclip during movement
    - Single tool instance
    - Clean GUI
--]]

--#region Platform Check
local UserInputService = game:GetService("UserInputService")
local platform = UserInputService:GetPlatform()

if platform ~= Enum.Platform.Windows and platform ~= Enum.Platform.OSX then
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Platform Not Supported",
        Text = "This script is only available for PC",
        Duration = 10
    })
    return
end
--#endregion

--#region Initialization
local CoreGui = game:GetService("CoreGui")

if getgenv().TeleportToolLoaded and not getgenv().IY_DEBUG then
    if getgenv().TeleportToolDisabled then
        getgenv().TeleportToolDisabled = false
    else
        return
    end
end
getgenv().TeleportToolLoaded = true
if getgenv().TeleportToolDisabled then return end

if not game:IsLoaded() then game.Loaded:Wait() end

-- Initial notifications
game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "Script loaded successfully!",
    Text = "Made by uzer*******",
    Duration = 7
})

game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "GUI is movable",
    Text = "Hold down the top part of the GUI",
    Duration = 6
})
--#endregion

--#region Services & Variables
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local tweenDuration = 0.5
local hideKey = Enum.KeyCode.H
local tweenKey = Enum.KeyCode.T
local tweenPlaying = false
local rebinding = false
local toolInstance = nil
local originalCollision = {}
--#endregion

--#region Core Functionality
local function setNoclip(enable)
    local character = player.Character
    if not character then return end

    if enable then
        originalCollision = {}
        for _, part in ipairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                originalCollision[part] = part.CanCollide
                part.CanCollide = false
            end
        end
    else
        for part, state in pairs(originalCollision) do
            if part.Parent then part.CanCollide = state end
        end
        originalCollision = {}
    end
end

local function tweenToPosition(targetPosition)
    if tweenPlaying then return end
    tweenPlaying = true

    local success, err = pcall(function()
        local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        if not hrp then return end

        setNoclip(true)
        local tween = TweenService:Create(
            hrp,
            TweenInfo.new(tweenDuration, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {CFrame = CFrame.new(targetPosition + Vector3.new(0, 3, 0))}
        )
        
        tween:Play()
        tween.Completed:Connect(function()
            setNoclip(false)
            tweenPlaying = false
        end)
    end)

    if not success then
        warn("Tween Error: " .. err)
        setNoclip(false)
        tweenPlaying = false
    end
end
--#endregion

--#region Tool Management
local function createTeleportTool()
    local tool = Instance.new("Tool")
    tool.Name = "Tween Tool"
    tool.RequiresHandle = false

    tool.Activated:Connect(function()
        local targetPosition = player:GetMouse().Hit.Position
        if targetPosition then tweenToPosition(targetPosition) end
    end)

    return tool
end

local function giveTool()
    local existing = player.Backpack:FindFirstChild("Tween Tool") 
        or (player.Character and player.Character:FindFirstChild("Tween Tool"))
    
    if not existing then
        toolInstance = createTeleportTool()
        toolInstance.Parent = player.Backpack
    else
        toolInstance = existing
    end
end

local function removeTool()
    if toolInstance then
        if toolInstance.Parent == player.Character then
            toolInstance.Parent = player.Backpack
        end
        toolInstance:Destroy()
        toolInstance = nil
    end

    for _, location in {player.Backpack, player.Character} do
        if location then
            local tool = location:FindFirstChild("Tween Tool")
            if tool then tool:Destroy() end
        end
    end
end
--#endregion

--#region Persistent GUI Implementation
local function createGUI()
    -- GUI persistence setup
    local screenGui = CoreGui:FindFirstChild("TeleportSettingsGui") or Instance.new("ScreenGui")
    screenGui.Name = "TeleportSettingsGui"
    screenGui.ResetOnSpawn = false
    screenGui.Enabled = screenGui:GetAttribute("GuiVisible") ~= nil and screenGui:GetAttribute("GuiVisible") or true
    screenGui.Parent = CoreGui

    -- Position persistence
    local savedPosition = screenGui:GetAttribute("GuiPosition") or UDim2.new(0, 50, 0, 50)
    
    local frame = screenGui:FindFirstChild("MainFrame") or Instance.new("Frame")
    frame.Name = "MainFrame"
    frame.Size = UDim2.new(0, 350, 0, 230)
    frame.Position = savedPosition
    frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    frame.Active, frame.Draggable = true, true
    frame.Parent = screenGui

    -- Save position when dragged
    frame:GetPropertyChangedSignal("Position"):Connect(function()
        screenGui:SetAttribute("GuiPosition", frame.Position)
    end)

    --#region GUI Controls
    local speedLabel = Instance.new("TextLabel")
    speedLabel.Size = UDim2.new(0, 200, 0, 20)
    speedLabel.Position = UDim2.new(0, 10, 0, 10)
    speedLabel.Text = "Tween Speed:"
    speedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    speedLabel.BackgroundTransparency = 1
    speedLabel.Parent = frame

    local speedBox = Instance.new("TextBox")
    speedBox.Size = UDim2.new(0, 200, 0, 20)
    speedBox.Position = UDim2.new(0, 10, 0, 35)
    speedBox.Text = tostring(tweenDuration)
    speedBox.TextColor3 = Color3.new(1, 1, 1)
    speedBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    speedBox.ClearTextOnFocus = false
    speedBox.Parent = frame
    speedBox.FocusLost:Connect(function()
        local newSpeed = tonumber(speedBox.Text)
        tweenDuration = (newSpeed and newSpeed > 0) and newSpeed or 0.5
        speedBox.Text = tostring(tweenDuration)
    end)

    local hideKeyButton = Instance.new("TextButton")
    hideKeyButton.Size = UDim2.new(0, 200, 0, 30)
    hideKeyButton.Position = UDim2.new(0, 10, 0, 65)
    hideKeyButton.Text = "Hide GUI keybind: " .. hideKey.Name
    hideKeyButton.TextColor3 = Color3.new(1, 1, 1)
    hideKeyButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    hideKeyButton.Parent = frame

    local tweenKeyButton = Instance.new("TextButton")
    tweenKeyButton.Size = UDim2.new(0, 200, 0, 30)
    tweenKeyButton.Position = UDim2.new(0, 10, 0, 95)
    tweenKeyButton.Text = "Tween Keybind: " .. tweenKey.Name
    tweenKeyButton.TextColor3 = Color3.new(1, 1, 1)
    tweenKeyButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    tweenKeyButton.Parent = frame

    local function startRebinding(button, keyType)
        rebinding = true
        local originalKey = (keyType == "hide") and hideKey or tweenKey
        button.Text = "Press Any Key..."
        button.BackgroundColor3 = Color3.fromRGB(0, 120, 215)

        local connection
        connection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
            if not gameProcessed and input.UserInputType == Enum.UserInputType.Keyboard then
                local newKey = input.KeyCode
                local otherKey = (keyType == "hide") and tweenKey or hideKey
                
                if newKey == otherKey then
                    button.Text = (keyType == "hide") and "Hide GUI keybind: " .. originalKey.Name or "Tween Keybind: " .. originalKey.Name
                    button.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
                    task.wait(0.5)
                    button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
                    return
                end

                if keyType == "hide" then
                    hideKey = newKey
                else
                    tweenKey = newKey
                end
                
                button.Text = (keyType == "hide") and "Hide GUI keybind: " .. newKey.Name or "Tween Keybind: " .. newKey.Name
                button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
                connection:Disconnect()
                rebinding = false
            end
        end)
    end

    hideKeyButton.MouseButton1Click:Connect(function()
        if not rebinding then startRebinding(hideKeyButton, "hide") end
    end)

    tweenKeyButton.MouseButton1Click:Connect(function()
        if not rebinding then startRebinding(tweenKeyButton, "tween") end
    end)

    --#region Player List
    local playerListLabel = Instance.new("TextLabel")
    playerListLabel.Size = UDim2.new(0, 120, 0, 20)
    playerListLabel.Position = UDim2.new(0, 225, 0, 10)
    playerListLabel.Text = "Player List:"
    playerListLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    playerListLabel.BackgroundTransparency = 1
    playerListLabel.Parent = frame

    local playerListFrame = Instance.new("ScrollingFrame")
    playerListFrame.Size = UDim2.new(0, 120, 0, 160)
    playerListFrame.Position = UDim2.new(0, 225, 0, 35)
    playerListFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    playerListFrame.BorderSizePixel = 0
    playerListFrame.ScrollBarThickness = 5
    playerListFrame.Parent = frame

    local function updatePlayerList()
        playerListFrame:ClearAllChildren()
        local yPosition = 0
        
        for _, plr in ipairs(Players:GetPlayers()) do
            if plr ~= player then
                local button = Instance.new("TextButton")
                button.Size = UDim2.new(1, -5, 0, 20)
                button.Position = UDim2.new(0, 0, 0, yPosition)
                button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
                button.TextColor3 = Color3.new(1, 1, 1)
                button.Text = plr.Name
                button.Parent = playerListFrame

                button.MouseButton1Click:Connect(function()
                    if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                        tweenToPosition(plr.Character.HumanoidRootPart.Position)
                    end
                end)

                yPosition += 20
            end
        end

        playerListFrame.CanvasSize = UDim2.new(0, 0, 0, yPosition)
    end

    updatePlayerList()
    Players.PlayerAdded:Connect(updatePlayerList)
    Players.PlayerRemoving:Connect(updatePlayerList)
    --#endregion

    local toggleGUIButton = Instance.new("TextButton")
    toggleGUIButton.Size = UDim2.new(0, 200, 0, 30)
    toggleGUIButton.Position = UDim2.new(0, 10, 0, 125)
    toggleGUIButton.Text = "Hide GUI"
    toggleGUIButton.TextColor3 = Color3.new(1, 1, 1)
    toggleGUIButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
    toggleGUIButton.Parent = frame
    toggleGUIButton.MouseButton1Click:Connect(function()
        screenGui.Enabled = not screenGui.Enabled
        screenGui:SetAttribute("GuiVisible", screenGui.Enabled)
    end)

    local disableButton = Instance.new("TextButton")
    disableButton.Size = UDim2.new(0, 200, 0, 30)
    disableButton.Position = UDim2.new(0, 10, 0, 155)
    disableButton.Text = "Destroy Script"
    disableButton.TextColor3 = Color3.new(1, 1, 1)
    disableButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
    disableButton.Parent = frame
    disableButton.MouseButton1Click:Connect(function()
        getgenv().TeleportToolDisabled = true
        removeTool()
        screenGui:Destroy()
    end)
    --#endregion
end
--#endregion

--#region Main Execution
if not getgenv().TeleportToolDisabled then
    giveTool()
    createGUI()
end

player.CharacterAdded:Connect(function()
    task.wait(1) -- Wait for full character load
    if not getgenv().TeleportToolDisabled then
        -- Reapply GUI state
        local screenGui = CoreGui:FindFirstChild("TeleportSettingsGui")
        if screenGui then
            screenGui.Enabled = screenGui:GetAttribute("GuiVisible")
            local frame = screenGui:FindFirstChild("MainFrame")
            if frame then
                frame.Position = screenGui:GetAttribute("GuiPosition") or UDim2.new(0, 50, 0, 50)
            end
        end
        giveTool()
    end
end)

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if rebinding or gameProcessed then return end

    local screenGui = CoreGui:FindFirstChild("TeleportSettingsGui")
    if input.KeyCode == hideKey and screenGui then
        screenGui.Enabled = not screenGui.Enabled
        screenGui:SetAttribute("GuiVisible", screenGui.Enabled)
    end

    if input.KeyCode == tweenKey and screenGui and not screenGui.Enabled then
        local targetPosition = player:GetMouse().Hit.Position
        if targetPosition then tweenToPosition(targetPosition) end
    end
end)
--#endregion
